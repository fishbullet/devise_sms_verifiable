= DeviseSmsVerifiable

If the devise is installed, run the generator to add configuration settings:

  rails generate devise_sms_verifiable:install

If devise not installed, run before generator:

  rails generate devise:install

For generate views run:

  rails generate devise_sms_verifiable:views


Add sms_verifiable to model:

  class User < ActiveRecord::Base
    # Include default devise modules. Others available are:
    # :confirmable, :lockable, :timeoutable and :omniauthable
    devise :database_authenticatable, :registerable,
                                      :validatable,
                                      :sms_verifiable,
                                      :recoverable
  end

Define 2 methods in ApplicationController

  class ApplicationController < ActionController::Base
    # Method for check need confirmation or no
    def sms_confirmation?
      return true if current_user && !current_user.phone_confirm? && current_user.phone
    end

    # Method generate secret write to model and return secret
    def sms_secret
      answer = (10..48).to_a.shuffle.take(4).join
      current_user.update(sms_answer: answer)
      answer
    end
  end

Add field to model.

  class AddFieldToUsers < ActiveRecord::Migration
    def change
      # Field in the model which phone number
      add_column :users, :phone, :string
      # Field in the model which returns the correct answer
      add_column :users, :sms_answer, :string
      # Field in the model which returns phone confirm or no
      add_column :users, :phone_confirm, :boolean, default: false
    end
  end


= Available options

  phone_confirmation_field = :phone_confirm

  sms_confirmation_method = :sms_confirmation?

  sms_secret_method = :sms_secret

  sms_answer_field = :sms_answer

  phone_field = :phone

  SMS provider module(have default for STREAM-TELECOM) you can define own
  Provider module should be a method :send_sms

  sms_provider = DeviseSmsVerifiable::Provider

  provider_silent = true

  provider_login = :provider_login

  provider_password :provider_password

  provider_from :provider_from

===============================================================================

Kiselenko Roman 2014-03-16

This project rocks and uses MIT-LICENSE.
