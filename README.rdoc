= DeviseSmsVerifiable

Define 2 methods in ApplicationController

  class ApplicationController < ActionController::Base
    # Method for check need confirmation or no.
    def sms_confirmation?
      return true if current_user && !current_user.phone_confirm? && current_user.phone
    end

    # Method generate secret write to model and return secret.
    def sms_secret
      answer = (10..48).to_a.shuffle.take(4)*''
      current_user.update(sms_answer: answer)
      answer
    end
  end

Add field to model.

  class AddFieldToUsers < ActiveRecord::Migration
    def change
      add_column :users, :phone, :string                          # Field in the model which phone number.
      add_column :users, :sms_answer, :string                     # Field in the model which returns the correct answer.
      add_column :users, :phone_confirm, :boolean, default: false # Field in the model which returns phone confirm or no.
    end
  end

===============================================================================

Some setup you must do manually if you haven't yet(in config/initializers/devise.rb):

  1. You need field in model for confirm phone(must be boolean).

  config.phone_confirmation_field = :phone_confirm

  2.You need define method for check sms confirmation. (in ApplicationController)

  config.sms_confirmation_method = :sms_confirmation?

  3. Need a method that generates, writes the word model, returns the secret word. (in ApplicationController)

  config.sms_secret_method = :sms_secret

  4. Field in the model which returns the correct answer

  config.sms_answer_field = :sms_answer

  6. Field in model which phone number

  config.phone_field = :phone

  5. SMS provider module(have default for STREAM-TELECOM) you can define own
     Provider module should be a method :send_sms

  config.sms_provider = DeviseSmsVerifiable::Provider

  7. Send sms silent for test

  config.provider_silent = true

  8. SMS provider login

  config.provider_login = :provider_login

  9. SMS provider password

  config.provider_password :provider_password

  10. SMS provider from

  config.provider_from :provider_from

===============================================================================

Kiselenko Roman 2014-03-16

This project rocks and uses MIT-LICENSE.
